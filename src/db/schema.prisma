generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CallStatus {
  INITIATED
  IN_PROGRESS
  COMPLETED
  FAILED
  CANCELLED
}

model Call {
  id                String     @id @default(uuid())
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  status            CallStatus
  prompt            String
  telephonyProvider String
  outputSchema      Json?
  output            Json?
  summary           String
  errorReason       String?
  language          String     @default("en-US")

  transcripts Transcript[]
  recording   Recording?
  provider    Provider?
  usage       Usage[]

  @@map("calls")
}

enum TranscriptType {
  USER
  ASSISTANT
  TOOL
}

model Transcript {
  id         String         @id @default(uuid())
  callId     String
  type       TranscriptType
  transcript String

  call Call @relation(fields: [callId], references: [id], onDelete: Cascade)

  @@map("transcripts")
}

model Recording {
  id                String  @id @default(uuid())
  callId            String  @unique
  recordingUrl      String?
  recordingDuration Int?
  recordingS3Key    String?
  recordingS3Bucket String?
  recordingS3Region String?
  recordingFormat   String?

  call Call @relation(fields: [callId], references: [id], onDelete: Cascade)

  @@map("recordings")
}

model Provider {
  id          String @id @default(uuid())
  callId      String @unique
  llmProvider String @default("openai")
  llmModel    String @default("gpt-4o")
  sttProvider String @default("deepgram")
  sttModel    String @default("nova-2")
  ttsProvider String @default("elevenlabs")
  ttsModel    String @default("eleven_multilingual_v2")

  call Call @relation(fields: [callId], references: [id], onDelete: Cascade)

  @@map("providers")
}

enum UsageType {
  LLM
  STT
  TTS
  TELEPHONY
}

model Usage {
  id     String    @id @default(uuid())
  callId String   
  type   UsageType
  usage  Int?

  call Call @relation(fields: [callId], references: [id], onDelete: Cascade)

  @@map("usages")
}
